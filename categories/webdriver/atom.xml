<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Webdriver | Selenium Tutorial]]></title>
  <link href="http://www.tabaolan.com/categories/webdriver/atom.xml" rel="self"/>
  <link href="http://www.tabaolan.com/"/>
  <updated>2014-08-07T15:27:06+07:00</updated>
  <id>http://www.tabaolan.com/</id>
  <author>
    <name><![CDATA[Ta Bao Lan]]></name>
    <email><![CDATA[tabaolan1987@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Webdriver : Introduction]]></title>
    <link href="http://www.tabaolan.com/blog/2014/08/07/webdriver-introduction/"/>
    <updated>2014-08-07T15:26:35+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/08/07/webdriver-introduction</id>
    <content type="html"><![CDATA[<h2>Selenium Introduction</h2>

<h3>About Selenium</h3>

<p>Selenium is a software testing framework for the web that facilitates the automation of browsers. The Selenium project produces various tools for automation testing such as Selenium IDE, Selenium Remote Control (RC), Selenium Grid and Selenium 2.0 &amp; WebDriver. Learning all the tools will give you many different options for approaching different automation problems. The entire suits of tools result in a rich set of testing functions specially geared to the needs of testing of web application of all types.</p>

<!--more-->


<h3>Why Selenium</h3>

<ul>
<li>Selenium is an open source tool with Corporate backing.</li>
<li>The tests can then be run against most modern web browsers.</li>
<li>Selenium deploys on Windows, Linux, and Macintosh platforms.</li>
<li>It allows recording, editing, and debugging tests.</li>
<li>Recorded tests can be exported in most language e.g. html, Java, .net, perl, ruby etc.</li>
<li>Selenium has the support of some of the largest browser vendors who have taken (or are taking) steps to make Selenium a native part of their browser.</li>
</ul>


<h3>Selenium WebDriver</h3>

<p>The primary new feature in Selenium 2.0 is the integration of the WebDriver API. WebDriver is designed to provide a simpler, more concise programming interface in addition to addressing some limitations in the Selenium-RC API. It enables you to use a programming language to write test scripts in different programming languages like html, Java, .net , perl, ruby and which enables you to use conditional operations, looping and other programming concepts which makes you test script robust. Selenium-WebDriver was developed to better support dynamic web pages where elements of a page may change without the page itself being reloaded. WebDriverâ€™s goal is to supply a well-designed object-oriented API that provides improved support for modern advanced web-app testing problems.</p>

<h3>WebDriver Vs Selenium RC</h3>

<p>1) Architecture</p>

<h4>WebDriver&rsquo;s architecture is simpler than Selenium RC&rsquo;s.</h4>

<p>It controls the browser from the OS level</p>

<p>All you need are your programming language&rsquo;s IDE (which contains your Selenium commands) and a browser.</p>

<p><img src="/images/compare-1.jpg">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>

<h4>Selenium RC&rsquo;s architecture is way more complicated.</h4>

<p>You first need to launch a separate application called Selenium Remote Control (RC) Server before you can start testing</p>

<p>The Selenium RC Server acts as a &ldquo;middleman&rdquo; between your Selenium commands and your browser</p>

<p>When you begin testing, Selenium RC Server &ldquo;injects&rdquo; a Javascript program called Selenium Core into the browser.</p>

<p>Once injected, Selenium Core will start receiving instructions relayed by the RC Server from your test program.</p>

<p>When the instructions are received, Selenium Core will execute them as Javascript commands.</p>

<p>The browser will obey the instructions of Selenium Core, and will relay its response to the RC Server.</p>

<p>The RC Server will receive the response of the browser and then display the results to you.</p>

<p>RC Server will fetch the next instruction from your test script to repeat the whole cycle.</p>

<p><img src="/images/compare-2.jpg">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>

<p>2) Speed</p>

<p>WebDriver is faster than Selenium RC since it  speaks directly to the browser uses the browser&rsquo;s own engine to control it.</p>

<p>Selenium RC is slower  sinceit uses a Javascript program called Selenium Core.This Selenium Core is the one that directly controls the browser, not you.</p>

<p>3) Real-life Interaction</p>

<p>WebDriver interacts with page elements in a more realistic way. For example, if you have a disabled text box on a page you were testing, WebDriver really cannot enter any value in it just as how a real person cannot.</p>

<p>Selenium Core, just like other Javascript codes, can access disabled elements .In the past, Selenium testers complain that Selenium Core was able to enter values to a disabled text box in their tests.Differences in API.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to take screenshot in Internet Explore]]></title>
    <link href="http://www.tabaolan.com/blog/2014/07/07/how-to-take-screenshot-in-internet-explore/"/>
    <updated>2014-07-07T15:07:11+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/07/07/how-to-take-screenshot-in-internet-explore</id>
    <content type="html"><![CDATA[<h2>Selenium Tutorial : How to take screentShot in Internet Explore using Selenium WebDriver?</h2>

<p>In browser Internet Explore we need to have some alter code for take screenshot in Internet Explore.</p>

<p>Take a look in this code below :</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
```</p>

<p>public static void takeScreenShotIE(WebDriver driver, String name){</p>

<pre><code>WebDriver augmentedDriver = new Augmenter().augment(driver);
output = ((TakesScreenshot) augmentedDriver).getScreenshotAs(OutputType.FILE);
file = new File(screenshootDir, name + ".png");
FileUtils.copyFile(output, file);
</code></pre>

<p>}</p>

<p>```
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Selenium WebDriver wait for new tab open]]></title>
    <link href="http://www.tabaolan.com/blog/2014/07/04/selenium-webdriver-wait-for-tab-open/"/>
    <updated>2014-07-04T11:12:22+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/07/04/selenium-webdriver-wait-for-tab-open</id>
    <content type="html"><![CDATA[<h2>Selenium Tutorial : How to wait for new tab open using Selenium WebDriver?</h2>

<h3>In some of case when you click in link or button , the new tab will be open.But we don&rsquo;t know what time the tab will be open success. Take a look in this code to resolve this problem</h3>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
```</p>

<pre><code>/**
 * @param driver : this is webdriver
 * @param timeout : time you define to wait the tab open
 * @return true if tab open in the time , false if tab not open in the time.
 */
</code></pre>

<p>public static boolean waitForNewTab(WebDriver driver,int timeout){</p>

<pre><code>    boolean check = false;
    int count = 0;
    while(!check){
        try {
            Set&lt;String&gt; winHandle = driver.getWindowHandles();
            if(winHandle.size() &gt; 1){
                check = true;
                return check;
            }
            Thread.sleep(1000);
            count++;
            if(count &gt; timeout){
                return check;
            }
        } catch (Exception e) {
        }
    }
    return check;
}
</code></pre>

<p>```
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to switch Driver to Tab/Window by Title tab?]]></title>
    <link href="http://www.tabaolan.com/blog/2014/07/01/switch-driver-to-tab-by-title/"/>
    <updated>2014-07-01T11:10:38+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/07/01/switch-driver-to-tab-by-title</id>
    <content type="html"><![CDATA[<h3>In some case when you need to switch driver to the tab/window that you know the title of this, you can use this method below</h3>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
```
public static WebDriver switchToTabByTitle(WebDriver driver , String title){</p>

<pre><code>    Set&lt;String&gt; handles = driver.getWindowHandles();
    for(String handle : handles){
        driver.switchTo().window(handle);
        if(driver.getTitle().equals(title)){
            break;
        }
    }
    return driver;
</code></pre>

<p>}
```
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Selenium WebDriver : How to press multi Keyboard]]></title>
    <link href="http://www.tabaolan.com/blog/2014/06/12/tipstricks-how-to-pressmulti-keyboard-in-selenium-webdriver/"/>
    <updated>2014-06-12T11:54:33+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/06/12/tipstricks-how-to-pressmulti-keyboard-in-selenium-webdriver</id>
    <content type="html"><![CDATA[<h2>For multiple key press :</h2>

<h3>First, get the ascii code for the key.</h3>

<p>For example if we want to press Ctrl-A, it should be 0001.</p>

<p>The full list is <a href="http://q.gs/7L9JV">here</a> or <a href="http://q.gs/7L9JW">here</a> .</p>

<p>First assign a character&copy; to the value and then convert that as string inside send key.</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
```
// ASCII code 1 for Ctrl-A
char c = &lsquo;\u0001&rsquo;;
driver.FindElement(By.XPath(&ldquo;String&rdquo;)).SendKeys(Convert.ToString&copy;);</p>

<p>```</p>

<h3>Use Action Class</h3>

<p>Make a action instance and use action instance .</p>

<p>Inhere, we have used 3 type of method to press three different key , and as they are different from each other, it will make 3 key press together.(means in here Alt+Shift+T)</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
```
Actions kpress = new Actions(driver);
kpress.keyDown(driver.findElement(By.id(&ldquo;name&rdquo;)), Keys.ALT).perform();
kpress.sendKeys(driver.findElement(By.id(&ldquo;name&rdquo;)), &ldquo;T&rdquo;).perform();
kpress.keyUp(driver.findElement(By.id(&ldquo;name&rdquo;)),Keys.SHIFT).perform();</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
