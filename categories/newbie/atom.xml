<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: NewBie | Selenium Tutorial]]></title>
  <link href="http://www.tabaolan.com/categories/newbie/atom.xml" rel="self"/>
  <link href="http://www.tabaolan.com/"/>
  <updated>2014-07-10T17:22:30+07:00</updated>
  <id>http://www.tabaolan.com/</id>
  <author>
    <name><![CDATA[Ta Bao Lan]]></name>
    <email><![CDATA[tabaolan1987@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Run Script Selenium IDE in Chrome]]></title>
    <link href="http://www.tabaolan.com/blog/2014/07/03/run-script-selenium-ide-in-chrome/"/>
    <updated>2014-07-03T14:55:19+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/07/03/run-script-selenium-ide-in-chrome</id>
    <content type="html"><![CDATA[<h2>Required download :</h2>

<p>1) <a href="/blog/2014/05/22/newbie-part-1-download-and-install-java/">Download and install JAVA</a></p>

<p>2) Download the latest Selenium server stand alone : <a href="http://docs.seleniumhq.org/download/">Click here</a></p>

<p><img src="/images/selenium-server.png">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="7145934352" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>

<p>3) Download the latest Chrome Driver server : <a href="http://docs.seleniumhq.org/download/">Click here</a></p>

<p><img src="/images/chrome-server.png"></p>

<h2>Required setup :</h2>

<p>1) When you download 2 file Selenium server and Chrome Driver server successfully , create new folder , copy 2 file jar to this folder and name this folder is &lsquo;Server&rsquo;.</p>

<p><img src="/images/folder-server-chrome.png"></p>

<p>2) Copy this folder &lsquo;Server&rsquo; to whatever you want in your computer.In this tutorial I copy this to Disk &lsquo;C&rsquo;.</p>

<p><img src="/images/folder-server-2.png"></p>

<p>3) Open your command line.</p>

<p><img src="/images/cmd1.png"></p>

<p>4) Locate your command line to the folder &lsquo;Server&rsquo;.</p>

<p><img src="/images/cmd2.png"></p>

<p>5) Start Selenium server and Chrome Driver Server by copy this command to the command line</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
<code>
java -jar selenium-server-standalone-2.42.0.jar -Dwebdriver.ie.driver=.\chromedriver.exe
</code></p>

<p><img src="/images/cmd4.png"></p>

<p>6) Open your Selenium IDE and load your test script you already created.</p>

<p><img src="/images/ie-ide-1.png"></p>

<p>7) Click on menu Options &ndash;> choose Options.</p>

<p><img src="/images/ie-ide-3.png"></p>

<p>8) Click on tab &lsquo;WebDriver&rsquo; &ndash;> check on &lsquo;Enable WebDriver Playback&rsquo; &ndash;> enter value &lsquo;chrome&rsquo; &ndash;> Click &lsquo;OK&rsquo; button.</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
<img src="/images/chrome-ide-1.png"></p>

<p>9) Click on &lsquo;Play current test case&rsquo;.This will open your Chrome and run your script automatic. Have fun and happy learning.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run Script Selenium IDE in Internet Explorer]]></title>
    <link href="http://www.tabaolan.com/blog/2014/07/03/run-script-selenium-ide-in-internet-explorer/"/>
    <updated>2014-07-03T14:05:55+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/07/03/run-script-selenium-ide-in-internet-explorer</id>
    <content type="html"><![CDATA[<h2>Required download :</h2>

<p>1) <a href="/blog/2014/05/22/newbie-part-1-download-and-install-java/">Download and install JAVA</a></p>

<p>2) Download the latest Selenium server stand alone : <a href="http://docs.seleniumhq.org/download/">Click here</a></p>

<p><img src="/images/selenium-server.png">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="7145934352" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>

<p>3) Download the latest Internet Explorer Driver server : <a href="http://docs.seleniumhq.org/download/">Click here</a></p>

<p><img src="/images/ie-server.png"></p>

<h2>Required setup :</h2>

<p>1) When you download 2 file Selenium server and Internet Explorer Driver server successfully , create new folder , copy 2 file jar to this folder and name this folder is &lsquo;Server&rsquo;.</p>

<p><img src="/images/folder-server.png"></p>

<p>2) Copy this folder &lsquo;Server&rsquo; to whatever you want in your computer.In this tutorial I copy this to Disk &lsquo;C&rsquo;.</p>

<p><img src="/images/folder-server-2.png"></p>

<p>3) Open your command line.</p>

<p><img src="/images/cmd1.png"></p>

<p>4) Locate your command line to the folder &lsquo;Server&rsquo;.</p>

<p><img src="/images/cmd2.png"></p>

<p>5) Start Selenium server and Internet Explorer Driver Server by copy this command to the command line</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
<code>
java -jar selenium-server-standalone-2.42.0.jar -Dwebdriver.ie.driver=.\IEDriverServer.exe
</code></p>

<p><img src="/images/cmd3.png"></p>

<p>6) Open your Selenium IDE and load your test script you already created.</p>

<p><img src="/images/ie-ide-1.png"></p>

<p>7) Click on menu Options &ndash;> choose Options.</p>

<p><img src="/images/ie-ide-3.png"></p>

<p>8) Click on tab &lsquo;WebDriver&rsquo; &ndash;> check on &lsquo;Enable WebDriver Playback&rsquo; &ndash;> enter value &lsquo;internet explorer&rsquo; &ndash;> Click &lsquo;OK&rsquo; button.</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
<img src="/images/ie-ide-4.png"></p>

<p>9) Click on &lsquo;Play current test case&rsquo;.This will open your Internet Explore and run your script automatic. Have fun and happy learning.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beginner with Selenium Ide Part 2: Record User Action and Export this Script to another language]]></title>
    <link href="http://www.tabaolan.com/blog/2014/06/02/beginner-with-selenium-ide-part-2-record-user-action-and-export-this-script-to-another-langugae/"/>
    <updated>2014-06-02T15:03:46+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/06/02/beginner-with-selenium-ide-part-2-record-user-action-and-export-this-script-to-another-langugae</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p>In this tutorial  , we will let you know how to record the user action in browser via Selenium IDE and How to export this to another language like java , &hellip;!</p>

<h3>Record User Action</h3>

<!--more-->


<p>1) Open Firefox Browser and click in the icon of Selenium IDE.</p>

<p><img src="/images/ide-3.png"></p>

<p>2) The GUI of Selenium Ide will show , click in the red circle button of the top to record user action.</p>

<p><img src="/images/ide-5.png"></p>

<p>3) Go back to the firefox driver and type to the url &ldquo;<a href="https://facebook.com">https://facebook.com</a>&rdquo;</p>

<p>4) Login to facebook as normal.</p>

<p>5) Back to Selenium IDE GUI , you will see it recorded your action.</p>

<p><img src="/images/ide-6.png"></p>

<p>6) Click in the button play to let Selenium IDE run again each action that you made before.</p>

<p><img src="/images/ide-7.png"></p>

<p>7) Now if you can save this test case as html file and re-run it by Open Selenium IDE and Open File &ndash;> choose the path you save this file.</p>

<h3>Export this test script to another language script.</h3>

<p>The most useful option is &ldquo;Export&rdquo; because it allows you to turn your Selenium IDE test cases into file formats that can run on Selenium Remote Control and WebDriver</p>

<p>Selenium IDE , test cases can be exported only to the following formats:</p>

<p>.cs (C# source code)</p>

<p>.java (Java source code)</p>

<p>.py (Python source code)</p>

<p>.rb (Ruby source code)</p>

<p>You just need click in menu File &ndash;> Export Test Case As.</p>

<p><img src="/images/ide-9.png">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>

<p>Note : You need to know that some function when you export from Selenium IDE to another language will be fail. I suggest you need to re-check the export File by running it again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beginner with Selenium Ide Part 1 : Download Selenium Ide and install in FireFox Browser]]></title>
    <link href="http://www.tabaolan.com/blog/2014/06/02/beginner-with-selenium-ide-part-1-download-selenium-ide-and-install-in-firefox-browser/"/>
    <updated>2014-06-02T14:34:19+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/06/02/beginner-with-selenium-ide-part-1-download-selenium-ide-and-install-in-firefox-browser</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p>Selenium IDE is a Firefox plugin which records and plays back user interactions with the browser. Use this to either create simple scripts or assist in exploratory testing. It can also export Remote Control or WebDriver scripts, though they tend to be somewhat brittle and should be overhauled into some sort of Page Object-y structure for any kind of resiliency.</p>

<!--more-->


<h3>How to download and install to firefox browser</h3>

<p>1) Install Firefox browser and setup it to your computer by click into this <a href="http://adf.ly/p8vFO">link</a></p>

<p>2) Go to Selenium and download Selenium IDE by click into this <a href="http://adf.ly/p8uzn">link</a></p>

<p>3) Click to the version current of Selenium IDE</p>

<p><img src="/images/ide-1.png"></p>

<p>4) Click to &lsquo;Allow&rsquo; button if it existed in the top of browser.</p>

<p><img src="/images/ide-2.png"></p>

<p>5) Click on button &lsquo;Install Now&rsquo; when it enable.</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
<img src="/images/ide-3.png"></p>

<p>6) After install please click in the &lsquo;Restart Now&rsquo; button in the top of browser</p>

<p>7) After restart you will see the icon of Selenium IDE show in the top of browser.</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
<img src="/images/ide-3.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beginner with Selenium WebDriver Part 4 : Configuration Eclipse with Selenium driver and Create First Test]]></title>
    <link href="http://www.tabaolan.com/blog/2014/05/23/newbie-part-4-configuration-eclipse-with-selenium-driver-and-create-fisrt-test/"/>
    <updated>2014-05-23T15:13:27+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/05/23/newbie-part-4-configuration-eclipse-with-selenium-driver-and-create-fisrt-test</id>
    <content type="html"><![CDATA[<h2>Beginner with Selenium WebDriver : Configuration Eclipse with Selenium driver and Create First Test</h2>

<h3>Create a simple test case selenium in Eclipse</h3>

<p>To configure Eclipse with Selenium webdriver, we need to launch the Eclipse IDE, create a Workspace, create a Project, create a Package, create a Class and add External libraries to the project.</p>

<!--more-->


<h3>1) Select WorkSpace on Eclipse start up.</h3>

<p>a) Double click on ‘eclipse.exe’ to start eclipse. First time when you start eclipse, it will ask you to select your workspace where your work will be stored as shown in below image.</p>

<p><img src="/images/Start-Eclipse-1.png">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>

<p>b) Create a “working directory” for all of your projects. Think of it like “My Documents” in the Windows operating system. It’s a folder which contains a lot of your documents, but there’s nothing to prevent you from creating another folder called “My Other Documents” (for instance) to house other documents.</p>

<p>Typically you only need one workspace, and you can think of it as your “My Documents” for Java code. If you wanted to, you could have more than one, but chances are you won’t have a use for more. I like to choose my own workplace location and will place all my ToolsQA tutorial projects under it.</p>

<p>You can change it later on from ‘Switch Workspace‘ under ‘File‘ menu of eclipse. After selecting workspace folder, Eclipse will be open.</p>

<p><img src="/images/Start-Eclipse-21.png"></p>

<p><img src="/images/Start-Eclipse-3.png"></p>

<p>c) You may see the window like this, this is the Welcome window for Eclipse. You may close this window.</p>

<p><img src="/images/Start-Eclipse-4.png"></p>

<h3>2) Create a new Project</h3>

<p>Projects: A collection of related code. Generally speaking, each project encompasses one independent program. Each programming assignment you do will typically require its own project.</p>

<p>Once you’ve established your workspace, you’ll want to create a project and begin writing code. In Eclipse, projects are the next-smallest functional unit after workspaces, but where you might have only one workspace, you will usually have several projects inside one workspace.</p>

<p>a) Create new Java Project from File > New > Project .</p>

<p><img src="/images/Setup-Project-1.png"></p>

<p>b) Select Java Project and click Next.</p>

<p><img src="/images/Setup-Project-2.png"></p>

<p>c) Give your Project name ‘OnlineStore‘ as shown in below given figures. Click on Finish button.</p>

<p><img src="/images/Setup-Project-3.png"></p>

<p>d) You may or may not see this message but if in case you get any, check Remember my decision and  click on Yes.</p>

<p><img src="/images/Setup-Project-4.png"></p>

<h3>3) Create a new Package</h3>

<p>a) Right click on Project name ‘OnlineStore‘ and select New > Package.</p>

<p><img src="/images/Creating-Package-1.png"></p>

<p>b) Give your Package name ‘automationFramework‘ and click on Finish button.</p>

<p><img src="/images/Creating-Package-2.png"></p>

<h3>4) Create a new Class</h3>

<p>Now that you have a project set up, you’re going to want start writing some new classes.</p>

<p>a) Right click on Package ‘automationFramework‘ and select New > Class.</p>

<p><img src="/images/Creating-Class-1.png"></p>

<p>b)  Give your Class name ‘FirstTestCase‘, check the option ‘public static void main‘ and click on Finish button. This will bring up totally a sweet class creation window.</p>

<p>Note: In case of not creating class for Main test case, please do not click ‘public static void main’. We need to select it only in case of writing test cases which we are going to execute and from where we call other classes. For functional classes, POM classes or any other classes we dont need this to be checked.</p>

<p><img src="/images/Creating-Class-2.png"></p>

<p>c) Now your Eclipse window will looks like bellow.</p>

<p><img src="/images/Creating-Class-3.png"></p>

<h3>5) Add External Jars to Java build path</h3>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="9425076351" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>

<p>Now you need to add selenium webdriver’s jar files in to Java build path.</p>

<p>a) Right click on Project ‘OnlineStore‘ > Select Properties > Java build path. Then navigate to Libraries tab and click Add External JARs.</p>

<p><img src="/images/Selenium-Jar-1.png"></p>

<p>b) Add Selenium Java jar, you may add the source file too.</p>

<p><img src="/images/Selenium-Jar-2.png"></p>

<p>c) Add all the jars from the libs folder as well.</p>

<p><img src="/images/Selenium-Jar-3.png"></p>

<p>d) Click OK.</p>

<p><img src="/images/Selenium-Jar-4.png"></p>

<p>That’s all about configuration of WebDriver with eclipse. Now you are ready to write your test script in eclipse and run it in WebDriver.</p>

<p><img src="/images/Selenium-Jar-5.png"></p>

<h3>6) Write your First Test Case</h3>

<p>a) Copy &amp; paste the below code to your First Test Case class and give it a run.</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="7145934352" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
```
package automationFramework;
import java.util.concurrent.TimeUnit;</p>

<p>import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;</p>

<p>public class FirstTestCase {</p>

<pre><code>private static WebDriver driver = null;

public static void main(String[] args) {
    // Create a new instance of the Firefox driver
    driver = new FirefoxDriver();

    //Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception
    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

    //Launch the facebook
    driver.get("https://www.facebook.com/");


    // Find the element that's ID attribute is 'email' (Username)
    // Enter email on the element found by above desc.
    driver.findElement(By.id("email")).sendKeys('enter your username login to facebook')

    // Find the element that's ID attribute is 'pass' (Password)
    // Enter Password on the element found by the above desc.
     driver.findElement(By.id("pass")).sendKeys("enter your password login to facebook"); 

    // Now submit the form. WebDriver will find the form for us from the element 
    driver.findElement(By.Xpath("//form[@id='login_form']/table/tbody/tr[2]/td[3]/label/input")).click();

    // Print a Log In message to the screen
    System.out.println(" Login Successfully, now it is the time to Log Off buddy.");

    // Close the driver
    driver.quit();
        }
}
</code></pre>

<p>```
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5798698216356388" data-ad-slot="3378542759" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>

<p>2) Now, to start the test just select Run > Run As > Java Application Or Right Click on Eclipse code and Click Run As  > Java Application</p>

<p>3) After a few Seconds a Mozilla browser will open  and you will see that with the help of your script, Selenium will Launch the Online Store, perform Sign in, display the Message, perform Log out and then Close the browser.</p>

<p>Once the execution is finished, you will see the message in Console section of the Eclipse IDE.</p>

<p>Now you will need to know about WebDriver in Selenium. I just create some basic knowledge about Webdriver please click <a href="/blog/categories/webdriver/">here</a></p>
]]></content>
  </entry>
  
</feed>
