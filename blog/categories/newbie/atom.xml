<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: NewBie | Ta Bao Lan]]></title>
  <link href="http://tabaolan1987.github.io/blog/categories/newbie/atom.xml" rel="self"/>
  <link href="http://tabaolan1987.github.io/"/>
  <updated>2014-05-29T09:48:05+07:00</updated>
  <id>http://tabaolan1987.github.io/</id>
  <author>
    <name><![CDATA[Ta Bao Lan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Newbie Part 4 : Configuration Eclipse with Selenium driver and Create Fisrt Test]]></title>
    <link href="http://tabaolan1987.github.io/blog/2014/05/23/newbie-part-4-configuration-eclipse-with-selenium-driver-and-create-fisrt-test/"/>
    <updated>2014-05-23T15:13:27+07:00</updated>
    <id>http://tabaolan1987.github.io/blog/2014/05/23/newbie-part-4-configuration-eclipse-with-selenium-driver-and-create-fisrt-test</id>
    <content type="html"><![CDATA[<h2>Creat a simple test case selenium in Eclipse</h2>

<p>To configure Eclipse with Selenium webdriver, we need to launch the Eclipse IDE, create a Workspace, create a Project, create a Package, create a Class and add External libraries to the project.</p>

<h3>1) Select WorkSpace on Eclipse start up.</h3>

<p>a) Double click on ‘eclipse.exe’ to start eclipse. First time when you start eclipse, it will ask you to select your workspace where your work will be stored as shown in below image.</p>

<p><img src="/images/Start-Eclipse-1.png"></p>

<p>b) Create a “working directory” for all of your projects. Think of it like “My Documents” in the Windows operating system. It’s a folder which contains a lot of your documents, but there’s nothing to prevent you from creating another folder called “My Other Documents” (for instance) to house other documents.</p>

<p>Typically you only need one workspace, and you can think of it as your “My Documents” for Java code. If you wanted to, you could have more than one, but chances are you won’t have a use for more. I like to choose my own workplace location and will place all my ToolsQA tutorial projects under it.</p>

<p>You can change it later on from ‘Switch Workspace‘ under ‘File‘ menu of eclipse. After selecting workspace folder, Eclipse will be open.</p>

<p><img src="/images/Start-Eclipse-21.png"></p>

<p><img src="/images/Start-Eclipse-3.png"></p>

<p>c) You may see the window like this, this is the Welcome window for Eclipse. You may close this window.</p>

<p><img src="/images/Start-Eclipse-4.png"></p>

<h3>2) Create a new Project</h3>

<p>Projects: A collection of related code. Generally speaking, each project encompasses one independent program. Each programming assignment you do will typically require its own project.</p>

<p>Once you’ve established your workspace, you’ll want to create a project and begin writing code. In Eclipse, projects are the next-smallest functional unit after workspaces, but where you might have only one workspace, you will usually have several projects inside one workspace.</p>

<p>a) Create new Java Project from File > New > Project .</p>

<p><img src="/images/Setup-Project-1.png"></p>

<p>b) Select Java Project and click Next.</p>

<p><img src="/images/Setup-Project-2.png"></p>

<p>c) Give your Project name ‘OnlineStore‘ as shown in below given figures. Click on Finish button.</p>

<p><img src="/images/Setup-Project-3.png"></p>

<p>d) You may or may not see this message but if in case you get any, check Remember my decision and  click on Yes.</p>

<p><img src="/images/Setup-Project-4.png"></p>

<h3>3) Create a new Package</h3>

<p>a) Right click on Project name ‘OnlineStore‘ and select New > Package.</p>

<p><img src="/images/Creating-Package-1.png"></p>

<p>b) Give your Package name ‘automationFramework‘ and click on Finish button.</p>

<p><img src="/images/Creating-Package-2.png"></p>

<h3>4) Create a new Class</h3>

<p>Now that you have a project set up, you’re going to want start writing some new classes.</p>

<p>a) Right click on Package ‘automationFramework‘ and select New > Class.</p>

<p><img src="/images/Creating-Class-1.png"></p>

<p>b)  Give your Class name ‘FirstTestCase‘, check the option ‘public static void main‘ and click on Finish button. This will bring up totally a sweet class creation window.</p>

<p>Note: In case of not creating class for Main test case, please do not click ‘public static void main’. We need to select it only in case of writing test cases which we are going to execute and from where we call other classes. For functional classes, POM classes or any other classes we dont need this to be checked.</p>

<p><img src="/images/Creating-Class-2.png"></p>

<p>c) Now your Eclipse window will looks like bellow.</p>

<p><img src="/images/Creating-Class-3.png"></p>

<h3>5) Add External Jars to Java build path</h3>

<p>Now you need to add selenium webdriver’s jar files in to Java build path.</p>

<p>a) Right click on Project ‘OnlineStore‘ > Select Properties > Java build path. Then navigate to Libraries tab and click Add External JARs.</p>

<p><img src="/images/Selenium-Jar-1.png"></p>

<p>b) Add Selenium Java jar, you may add the source file too.</p>

<p><img src="/images/Selenium-Jar-2.png"></p>

<p>c) Add all the jars from the libs folder as well.</p>

<p><img src="/images/Selenium-Jar-3.png"></p>

<p>d) Click OK.</p>

<p>&mdash; Ấn nút Ok.</p>

<p><img src="/images/Selenium-Jar-4.png"></p>

<p>That’s all about configuration of WebDriver with eclipse. Now you are ready to write your test script in eclipse and run it in WebDriver.</p>

<p><img src="/images/Selenium-Jar-5.png"></p>

<h3>6) Write your First Test Case</h3>

<p>a) Copy &amp; paste the below code to your First Test Case class and give it a run.</p>

<p>```
package automationFramework;
import java.util.concurrent.TimeUnit;</p>

<p>import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;</p>

<p>public class FirstTestCase {</p>

<pre><code>private static WebDriver driver = null;

public static void main(String[] args) {
    // Create a new instance of the Firefox driver
    driver = new FirefoxDriver();

    //Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception
    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

    //Launch the facebook
    driver.get("https://www.facebook.com/");


    // Find the element that's ID attribute is 'email' (Username)
    // Enter email on the element found by above desc.
    driver.findElement(By.id("email")).sendKeys('enter your username login to facebook')

    // Find the element that's ID attribute is 'pass' (Password)
    // Enter Password on the element found by the above desc.
     driver.findElement(By.id("pass")).sendKeys("enter your password login to facebook"); 

    // Now submit the form. WebDriver will find the form for us from the element 
    driver.findElement(By.Xpath("//form[@id='login_form']/table/tbody/tr[2]/td[3]/label/input")).click();

    // Print a Log In message to the screen
    System.out.println(" Login Successfully, now it is the time to Log Off buddy.");

    // Close the driver
    driver.quit();
        }
}
</code></pre>

<p>```</p>

<p>2) Now, to start the test just select Run > Run As > Java Application Or Right Click on Eclipse code and Click Run As  > Java Application</p>

<p>3) After a few Seconds a Mozilla browser will open  and you will see that with the help of your script, Selenium will Launch the Online Store, perform Sign in, display the Message, perform Log out and then Close the browser.</p>

<p>Once the execution is finished, you will see the message in Console section of the Eclipse IDE.</p>

<p>Now you will need to know about WebDriver in Selenium. I just create some basic knowledge about Webdriver please click <a href="/blog/categories/webdriver/">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newbie Part 3 : Download Webdriver Java client]]></title>
    <link href="http://tabaolan1987.github.io/blog/2014/05/22/newbie-part-3-download-webdriver-java-client/"/>
    <updated>2014-05-22T16:49:41+07:00</updated>
    <id>http://tabaolan1987.github.io/blog/2014/05/22/newbie-part-3-download-webdriver-java-client</id>
    <content type="html"><![CDATA[<h2>Download WebDriver Java client</h2>

<p>Selenium webdriver supports many languages and each language has its own client driver. Here we are configuring selenium 2 with Java so we need ‘webdriver Java client driver’.</p>

<p>1) <a href="http://docs.seleniumhq.org/download/">Click here</a> to go on WebDriver Java client driver download page for webdriver download file. On that page click on ‘Download‘ link of Java client driver as shown in the below image.</p>

<p><img src="/images/Download-Webdriver-Java-Client-1.png"></p>

<p>2) Save the zip file to your disk.</p>

<p><img src="/images/Download-Webdriver-Java-Client-2.png"></p>

<p>3) Once you have downloaded the archive you will need to Extract the zip file, which will create the unzipped Selenium Java folder.</p>

<p><img src="/images/Download-Webdriver-Java-Client-3.png"></p>

<p>4) You may want to Extract the archive to the folder where you are maintaing the test ware for your project. I like to extract it at the same location and then move it as per my needs.</p>

<p><img src="/images/Download-Webdriver-Java-Client-4.png"></p>

<p>5) Once the extraction process is complete, Open the Selenium folder.</p>

<p><img src="/images/Download-Webdriver-Java-Client-5.png"></p>

<p>6) There will be ‘libs’ folder, 2 jar files and change log in unzipped folder as shown in bellow figure. We will use all these files for configuring webdriver in eclipse.</p>

<p><img src="/images/Download-Webdriver-Java-Client-6.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newbie Part 2 : Download and Start Eclipse]]></title>
    <link href="http://tabaolan1987.github.io/blog/2014/05/22/newbie-part-2-download-and-start-eclipse/"/>
    <updated>2014-05-22T15:38:28+07:00</updated>
    <id>http://tabaolan1987.github.io/blog/2014/05/22/newbie-part-2-download-and-start-eclipse</id>
    <content type="html"><![CDATA[<h2>Download and Start Eclipse IDE</h2>

<p>Download Eclipse for Java Developers, extract and save it in any drive. It is totally free. You can run ‘eclipse.exe’ directly so you do not need to install Eclipse in your system.</p>

<p>1) Go to <a href="http://www.eclipse.org/downloads.">|Eclipse download page</a></p>

<p><img src="/images/Download-and-Install-Eclipse-1.png"></p>

<p>2) For Windows users, you will have to know what type of version of your OS you have. If your computer is a 64 bit Windows , select Windows 64 and if you have a 32 bit Windows, select Windows 32 bit.</p>

<p><img src="/images/Download-and-Install-Eclipse-2.png"></p>

<p>3) Save the .zip file to your disk.</p>

<p><img src="/images/Download-and-Install-Eclipse-3.png"></p>

<p>4) Once you have downloaded the Eclipse archive you will need to Extract the zip file, which will create the unzipped Eclipse folder.</p>

<p><img src="/images/Download-and-Install-Eclipse-4.png"></p>

<p>5) You may want to Extract the archive to the root of C: drive, thus creating the folder “C:eclipse”, or just moved the extracted eclipse folder to the root of C: drive if you extracted it already. I prefer to leave it as it is.</p>

<p><img src="/images/Download-and-Install-Eclipse-5.png"></p>

<p>6) Let the extraction process finished.</p>

<p><img src="/images/Download-and-Install-Eclipse-6.png"></p>

<p>7) Open the eclipse folder.</p>

<p><img src="/images/Download-and-Install-Eclipse-7.png"></p>

<p>8) Since Eclipse IDE does not have any installer, there will be a file inside the Eclipse folder named eclipse.exe. You can double click on the file to run Eclipse.</p>

<p>Note:(This step is not required, but it’s strongly recommended.) Right-click the Eclipse Icon and press “Send To” &ndash;> “Desktop (Create Shortcut).” Now you will be able to launch Eclipse from your desktop.</p>

<p><img src="/images/Download-and-Install-Eclipse-8.png"></p>

<p><img src="/images/Download-and-Install-Eclipse-9.png"></p>

<p>9) Create a workspace folder where you will contain all the program files you create.  You can choose whatever place you want for your workspace, but it’s easiest to just use the default you’re given. I like to choose my own workplace location and will place all my Toolsqa tutorial projects under it.</p>

<p><img src="/images/Start-Eclipse-2.png"></p>

<p>10) You may see the window like this, this is the Welcome window for Eclipse.</p>

<p><img src="/images/Download-and-Install-Eclipse-11.png"></p>

<p>11) Now that you have finished installing eclipse restart your computer. By restarting your computer it refreshes system memory and allows changes made by installers and uninstallers to take effect.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newbie Part 1 :Download and Install Java ]]></title>
    <link href="http://tabaolan1987.github.io/blog/2014/05/22/newbie-part-1-download-and-install-java/"/>
    <updated>2014-05-22T15:36:12+07:00</updated>
    <id>http://tabaolan1987.github.io/blog/2014/05/22/newbie-part-1-download-and-install-java</id>
    <content type="html"><![CDATA[<h2>Download and Install Java</h2>

<p>First of all you need to install JDK (Java development kit) in your system. So your next question will be “how can I download java”. <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Click here</a> to download Java and install it in your system as per given installation guide over there or follow the below mentioned steps.</p>

<p>1) Visit the <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java downloads page</a> on Oracle’s website to find the JDK environment download. Scroll down until you find Java SE Latest Version and download JDK.</p>

<p><img src="/images/Download-And-Install-Java-1.png"></p>

<p>2) Once you have selected download, accept the terms of service and choose the correct OS corresponding for the specific JDK. (Windows, Mac, Linux, etc.)</p>

<p><img src="/images/Download-And-Install-Java-2.png"></p>

<p>3) Save the .exe file to your disk.</p>

<p><img src="/images/Download-And-Install-Java-3.png"></p>

<p>4) Once the download is complete, double click the file to begin the installation of JDK.</p>

<p><img src="/images/Download-And-Install-Java-4.png"></p>

<p>5) To run the installer, click Run.</p>

<p><img src="/images/Download-And-Install-Java-5.png"></p>

<p>6) The installation process starts. Click the Next button to continue the installation.</p>

<p><img src="/images/Download-And-Install-Java-6.png"></p>

<p>7) On the next screen you will encounter some options. Just leave these alone and click Next unless you know what you are doing.</p>

<p><img src="/images/Download-And-Install-Java-7.png"></p>

<p>8) After the initial installation is done, a pop up asking you where your source java files will be. You can choose to change where you want to keep your folder but it’s best to stick with what you were given first. Click Next to continue.</p>

<p><img src="/images/Download-And-Install-Java-8.png"></p>

<p>9) Let the installation finish.</p>

<p><img src="/images/Download-And-Install-Java-9.png"></p>

<p>10) A few brief dialogs confirm the last steps of the installation process; click Close on the last dialog. This will complete Java installation process.</p>

<p><img src="/images/Download-And-Install-Java-10.png"></p>
]]></content>
  </entry>
  
</feed>
