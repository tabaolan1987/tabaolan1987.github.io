<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tricks | Selenium Tutorial]]></title>
  <link href="http://www.tabaolan.com/blog/categories/tricks/atom.xml" rel="self"/>
  <link href="http://www.tabaolan.com/"/>
  <updated>2014-06-11T15:59:38+07:00</updated>
  <id>http://www.tabaolan.com/</id>
  <author>
    <name><![CDATA[Ta Bao Lan]]></name>
    <email><![CDATA[tabaolan1987@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tips&Tricks : Table tricks ]]></title>
    <link href="http://www.tabaolan.com/blog/2014/06/11/tipandtricks-table-tricks/"/>
    <updated>2014-06-11T15:02:38+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/06/11/tipandtricks-table-tricks</id>
    <content type="html"><![CDATA[<h2>Table</h2>

<p>If table have a lot of data inside and you need to find the data you want.Check this code below.</p>

<p>```</p>

<p>String data_you_want_to_check = &ldquo;your data in here&rdquo;;
boolean check_data_existed = false;
WebDriver driver = new ChromeDriver();</p>

<p>driver.get(&lsquo;yoururl&rsquo;);</p>

<p>//you can find table by xpath or some option ,depend on your site.
WebElement table = driver.findElement(By.id(&lsquo;yourTableID&rsquo;));
//get all tr inside table
List<WebElement> tr_table = table.findElements(By.tagName(&ldquo;tr&rdquo;));
//now we will loop
for(WebElement el : tr_table){</p>

<pre><code>List&lt;WebElement&gt; td_table = tr_table.findElements(By.tagName("td"));
for(WebElement elm : td_table){
    String text_inside_td = elm.getText();
    if(text_inside_td.equalsIgnoreCase(data_you_want_to_check)){
        check_data_existed = true;
        break;
    }
}
</code></pre>

<p>}</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips&Tricks : Call JavaScript ]]></title>
    <link href="http://www.tabaolan.com/blog/2014/06/11/tipandtricks-call-javascript/"/>
    <updated>2014-06-11T14:40:40+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/06/11/tipandtricks-call-javascript</id>
    <content type="html"><![CDATA[<h2>Call JavaScript function with JavascriptExecutor</h2>

<p>In some case you need to call some JavaScript function in Page. Just do this like code below :</p>

<p>```</p>

<p>WebDriver driver = new ChromeDriver();
driver.get(&lsquo;anyurl.com&rsquo;);
((JavascriptExecutor)driver).executeScript(&ldquo;yourScript();&rdquo;);</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips&Tricks : Complex Action]]></title>
    <link href="http://www.tabaolan.com/blog/2014/06/11/tipandtrip-complex-action/"/>
    <updated>2014-06-11T14:30:39+07:00</updated>
    <id>http://www.tabaolan.com/blog/2014/06/11/tipandtrip-complex-action</id>
    <content type="html"><![CDATA[<h2>Mouse Hover action</h2>

<p>There will be situations where it is required to click on the item of the drop down menu that will show up when you mouse over this menu.take a look in the example :</p>

<p><code>
// find the menu that have the dropdown showing when we mouse over it.  
WebElement element = driver.findElement(By.linkText("Category"));
//Create instance of action class
Actions action = new Actions(driver);
//move mouse over the menu.
action.moveToElement(element).build().perform();
//find the link you want and click it.
driver.findElement(By.linkText("News")).click();
</code></p>

<p>or you can code like this way :</p>

<p>```
WebElement element = driver.findElement(By.linkText(&ldquo;Category&rdquo;));</p>

<pre><code>    Actions action = new Actions(driver);
</code></pre>

<p>action.moveToElement(element).moveToElement(driver.findElement(By.linkText(&ldquo;News&rdquo;))).click().build().perform();</p>

<p>```</p>

<p>With some of the browser it happens that once mouse hover action is performed, the menu list disappear with in the fractions of seconds before Selenium identify the next submenu item and perform click action on it. In that case it is better to use perform()&lsquo; action on the main menu to hold the menu list till the time Selenium identify the sub menu item and click on it.</p>

<p><code>
WebElement element = driver.findElement(By.linkText("Category"));
Actions action = new Actions(driver);
action.moveToElement(element).perform();
WebElement subElement = driver.findElement(By.linkText("News"));
action.moveToElement(subElement);
action.click();
action.perform();
</code></p>

<h2>Drag And Drop</h2>

<p>In case you need drag and drop an element to another position , the action class provide us the way like below code :</p>

<p>```</p>

<p>WebElement From = driver.findElement(By.xpath(&ldquo;yourlocationElement));
WebElement To = driver.findElement(By.xpath("yourlocationElement&rdquo;));
Actions builder = new Actions(driver);
Action dragAndDrop = builder.clickAndHold(From)
.moveToElement(To)
.release(To)
.build();
dragAndDrop.perform();</p>

<p>```</p>

<h2>Scroll bars dragging</h2>

<p>The following code demonstrates how to drag the vertical scroll bars on a window. The &ldquo;Actions&rdquo; class is used to click and hold on to the scroll bar and then it is dragged to a new location.</p>

<p>```
Actions dragger = new Actions(driver);
WebElement draggablePartOfScrollbar = driver.findElement(By.xpath(&ldquo;yourscrollbarsXpaht&rdquo;));</p>

<p>// drag downwards
int numberOfPixelsToDragTheScrollbarDown = 10;
for (int i=10;i&lt;150;i=i+numberOfPixelsToDragTheScrollbarDown){</p>

<pre><code>// this causes a gradual drag of the scroll bar, 10 units at a time
dragger.moveToElement(draggablePartOfScrollbar).clickAndHold().moveByOffset(0,numberOfPixelsToDragTheScrollbarDown).release().perform();
Thread.sleep(1000L);
</code></pre>

<p>}</p>

<pre><code>// now drag opposite way (downwards)
numberOfPixelsToDragTheScrollbarDown = -10;
</code></pre>

<p>for (int i=150;i>10;i=i+numberOfPixelsToDragTheScrollbarDown){</p>

<pre><code>// this causes a gradual drag of the scroll bar, -10 units at a time
dragger.moveToElement(draggablePartOfScrollbar).clickAndHold().moveByOffset(0,numberOfPixelsToDragTheScrollbarDown).release().perform();
Thread.sleep(1000L);
</code></pre>

<p>}</p>

<p>```</p>

<h2>RightClick on Element</h2>

<p>In case you want right click on Element please follow the code below :</p>

<p><code>
Actions actions = new Actions(driver);    
Action action=actions.contextClick(WebElement).build(); //pass WebElement as an argument
action.perform();
</code></p>

<h2>Sliding</h2>

<p><code>
WebElement draggable = driver.findElement("find your slider in here by id or xpath etc..");
new Actions(driver).dragAndDropBy(draggable, 120, 0).build().perform();
</code></p>

<h2>SelectMulti</h2>

<p><code>
List&lt;WebElement&gt; listItems = driver.findElements("find your select by id or xpath or etc");
Actions builder = new Actions(driver);
builder.clickAndHold(listItems.get(1)).clickAndHold(listItems.get(2)).click();
Action selectMultiple = builder.build();
selectMultiple.perform();
</code></p>
]]></content>
  </entry>
  
</feed>
